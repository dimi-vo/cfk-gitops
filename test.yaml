apiVersion: platform.confluent.io/v1beta1
kind: Connect
metadata:
  labels:
    env: development
  name: connect
  namespace: confluent-dev
spec:
  authorization:
    type: rbac
  dependencies:
    kafka:
      authentication:
        type: mtls
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      tls:
        enabled: true
    mds:
      authentication:
        bearer:
          secretRef: connect-mds-client
        type: bearer
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tls:
        enabled: true
      tokenKeyPair:
        secretRef: mds-token
  image:
    application: confluentinc/cp-server-connect:7.5.1
    init: confluentinc/confluent-init-container:2.7.0
  replicas: 1
  tls:
    autoGeneratedCerts: true
---
apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  labels:
    env: development
  name: controlcenter
  namespace: confluent-dev
spec:
  authorization:
    type: rbac
  dataVolumeCapacity: 10Gi
  dependencies:
    connect:
    - name: connect
      tls:
        enabled: true
      url: https://connect.confluent.svc.cluster.local:8083
    kafka:
      authentication:
        type: mtls
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      tls:
        enabled: true
    ksqldb:
    - name: ksqldb
      tls:
        enabled: true
      url: https://ksqldb.confluent.svc.cluster.local:8088
    mds:
      authentication:
        bearer:
          secretRef: c3-mds-client
        type: bearer
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tls:
        enabled: true
      tokenKeyPair:
        secretRef: mds-token
    schemaRegistry:
      tls:
        enabled: true
      url: https://schemaregistry.confluent.svc.cluster.local:8081
  image:
    application: confluentinc/cp-enterprise-control-center:7.5.1
    init: confluentinc/confluent-init-container:2.7.0
  podTemplate:
    probe:
      liveness:
        failureThreshold: 5
        periodSeconds: 10
        timeoutSeconds: 500
  replicas: 1
  tls:
    autoGeneratedCerts: true
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  labels:
    env: development
  name: kafka
  namespace: confluent-dev
spec:
  authorization:
    superUsers:
    - User:kafka
    type: rbac
  dataVolumeCapacity: 10Gi
  dependencies:
    kafkaRest:
      authentication:
        bearer:
          secretRef: mds-client
        type: bearer
    zookeeper:
      authentication:
        type: mtls
      endpoint: zookeeper.confluent.svc.cluster.local:2182
      tls:
        enabled: true
  image:
    application: confluentinc/cp-server:7.5.1
    init: confluentinc/confluent-init-container:2.7.0
  listeners:
    external:
      authentication:
        principalMappingRules:
        - RULE:.*CN[\\s]?=[\\s]?([a-zA-Z0-9.]*)?.*/$1/
        type: mtls
      externalAccess:
        loadBalancer:
          bootstrapPrefix: kafka
          brokerPrefix: b
          domain: mydomain.com
        type: loadBalancer
      tls:
        enabled: true
        secretRef: tls-kafka
    internal:
      authentication:
        principalMappingRules:
        - RULE:.*CN[\\s]?=[\\s]?([a-zA-Z0-9.]*)?.*/$1/
        type: mtls
      tls:
        enabled: true
  podTemplate:
    probe:
      liveness:
        failureThreshold: 9
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      readiness:
        failureThreshold: 5
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 3
        timeoutSeconds: 5
    terminationGracePeriodSeconds: 300
  replicas: 1
  services:
    mds:
      provider:
        ldap:
          address: ldap://ldap.confluent.svc.cluster.local:389
          authentication:
            simple:
              secretRef: credential
            type: simple
          configurations:
            groupMemberAttribute: member
            groupMemberAttributePattern: CN=(.*),DC=test,DC=com
            groupNameAttribute: cn
            groupObjectClass: group
            groupSearchBase: dc=test,dc=com
            groupSearchScope: 1
            userMemberOfAttributePattern: CN=(.*),DC=test,DC=com
            userNameAttribute: cn
            userObjectClass: organizationalRole
            userSearchBase: dc=test,dc=com
            userSearchScope: 1
        type: ldap
      tls:
        enabled: true
      tokenKeyPair:
        secretRef: mds-token
  tls:
    autoGeneratedCerts: true
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestClass
metadata:
  labels:
    env: development
  name: default
  namespace: confluent-dev
spec:
  kafkaRest:
    authentication:
      bearer:
        secretRef: rest-credential
      type: bearer
---
apiVersion: platform.confluent.io/v1beta1
kind: KsqlDB
metadata:
  labels:
    env: development
  name: ksqldb
  namespace: confluent-dev
spec:
  authorization:
    type: rbac
  dataVolumeCapacity: 10Gi
  dependencies:
    kafka:
      authentication:
        type: mtls
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      tls:
        enabled: true
    mds:
      authentication:
        bearer:
          secretRef: ksqldb-mds-client
        type: bearer
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tls:
        enabled: true
      tokenKeyPair:
        secretRef: mds-token
  image:
    application: confluentinc/cp-ksqldb-server:7.5.1
    init: confluentinc/confluent-init-container:2.7.0
  replicas: 0
  tls:
    autoGeneratedCerts: true
---
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  labels:
    env: development
  name: schemaregistry
  namespace: confluent-dev
spec:
  authorization:
    type: rbac
  dependencies:
    kafka:
      authentication:
        type: mtls
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      tls:
        enabled: true
    mds:
      authentication:
        bearer:
          secretRef: sr-mds-client
        type: bearer
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tls:
        enabled: true
      tokenKeyPair:
        secretRef: mds-token
  image:
    application: confluentinc/cp-schema-registry:7.5.1
    init: confluentinc/confluent-init-container:2.7.0
  replicas: 1
  tls:
    autoGeneratedCerts: true
---
apiVersion: platform.confluent.io/v1beta1
kind: Zookeeper
metadata:
  labels:
    env: development
  name: zookeeper
  namespace: confluent-dev
spec:
  authentication:
    type: mtls
  dataVolumeCapacity: 10Gi
  image:
    application: confluentinc/cp-zookeeper:7.5.1
    init: confluentinc/confluent-init-container:2.7.0
  logVolumeCapacity: 10Gi
  replicas: 1
  tls:
    autoGeneratedCerts: true
